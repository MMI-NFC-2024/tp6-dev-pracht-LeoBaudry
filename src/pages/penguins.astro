---
import PlotFigure from "../components/PlotFigure.astro";
import Layout from "../layouts/Layout.astro";
import * as Plot from "@observablehq/plot";
import penguins from "../assets/penguins.json";

const speciesList = [...new Set(penguins.map(p => p.species))];

const grouped = speciesList.map(species => ({
  species,
  data: penguins.filter(p => p.species === species),
}));

function makeOptions(data, species) {
  return {
    grid: true,
    marks: [
      Plot.dot(data.filter(d => d.culmen_length_mm && d.culmen_depth_mm), {
        x: "culmen_length_mm",
        y: "culmen_depth_mm",
        stroke: "sex",
      }),
    ],
    x: { label: "Culmen length (mm)" },
    y: { label: "Culmen depth (mm)" },
    title: `Espèce ${species}`,
  };
}
---

<Layout>
  <section class="flex flex-col items-center gap-4 py-8">
    <h1 class="text-2xl font-bold mb-6">Graphiques de toutes les espèces de pingouins</h1>

    <div class="w-full max-w-3xl relative flex items-center">
      <button
        id="prev"
        class="text-white bg-gray-800/50 hover:bg-gray-800 px-3 py-1 rounded mr-2">
        ⟨
      </button>

      <div class="flex-1">
        {grouped.map((g, i) => (
          <div class={`slide ${i === 0 ? "block" : "hidden"}`} id={g.species}>
            <h2 class="text-center text-lg font-semibold mb-2">{g.species}</h2>
            <PlotFigure options={makeOptions(g.data, g.species)} />
          </div>
        ))}
      </div>

      <button
        id="next"
        class="text-white bg-gray-800/50 hover:bg-gray-800 px-3 py-1 rounded ml-2">
        ⟩
      </button>
    </div>
  </section>

  <script>
    const slides = document.querySelectorAll(".slide");
    const next = document.getElementById("next");
    const prev = document.getElementById("prev");

    let current = 0;

    function showSlide(index) {
      slides.forEach((s, i) => {
        s.classList.toggle("hidden", i !== index);
        s.classList.toggle("block", i === index);
      });
    }

    next.addEventListener("click", () => {
      current = (current + 1) % slides.length;
      showSlide(current);
    });

    prev.addEventListener("click", () => {
      current = (current - 1 + slides.length) % slides.length;
      showSlide(current);
    });
  </script>
</Layout>
